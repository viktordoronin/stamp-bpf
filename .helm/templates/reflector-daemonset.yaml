{{- if .Values.reflector.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "stamp-bpf.reflector.fullname" . }}
  namespace: {{ include "stamp-bpf.namespace" . }}
  labels:
    {{- include "stamp-bpf.labels" . | nindent 4 }}
    app.kubernetes.io/component: reflector
spec:
  selector:
    matchLabels:
      {{- include "stamp-bpf.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: reflector
  template:
    metadata:
      labels:
        {{- include "stamp-bpf.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: reflector
    spec:
      {{- with include "stamp-bpf.nodeSelector" . }}
      nodeSelector:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "stamp-bpf.tolerations" . }}
      tolerations:
        {{- . | nindent 8 }}
      {{- end }}
      {{- with include "stamp-bpf.affinity" . }}
      affinity:
        {{- . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ include "stamp-bpf.reflector.fullname" . }}
      {{- with include "stamp-bpf.podSecurityContext" . }}
      securityContext:
        {{- . | nindent 8 }}
      {{- end }}
      containers:
        - name: reflector
          image: {{ include "stamp-bpf.reflector.image" . }}
          {{- $pullPolicy := "" }}
          {{- if and $.Values.reflector.image (hasKey $.Values.reflector.image "pullPolicy") }}
            {{- $pullPolicy = $.Values.reflector.image.pullPolicy }}
          {{- else if and $.Values.global.image (hasKey $.Values.global.image "pullPolicy") }}
            {{- $pullPolicy = $.Values.global.image.pullPolicy }}
          {{- else }}
            {{- $pullPolicy = "IfNotPresent" }}
          {{- end }}
          imagePullPolicy: {{ $pullPolicy }}
          securityContext:
            {{- include "stamp-bpf.containerSecurityContext" . | nindent 12 }}
          command: [{{ $.Values.reflector.command | default "/usr/local/bin/reflector" | quote }}]
          args:
            {{- include "stamp-bpf.reflector.args" . | nindent 12 }}
          env:
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  resource: limits.cpu
          {{- with .Values.reflector.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: bpf-fs
          hostPath:
            path: /sys/fs/bpf
            type: Directory
{{- end }}